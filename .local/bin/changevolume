#!/bin/bash

send_notification() {
  VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2*100}')
  if [[ $VOLUME -ge 50 ]]
    then
      dunstify "Volume: $VOLUME%" -h int:value:$VOLUME -u normal -i "volume_up" -t 2000 -r 6428
  elif [[ $VOLUME -lt 50 ]] && [[ $VOLUME -gt 0 ]]
    then
      dunstify "Volume: $VOLUME%" -h int:value:$VOLUME -u normal -i "volume_down" -t 2000 -r 6428
  elif [[ $VOLUME -eq 0 ]]
    then
      dunstify "Volume: $VOLUME%" -h int:value:$VOLUME -u normal -i "volume_zero" -t 2000 -r 6428
  fi
}

is_muted() {
  if echo "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" | grep -q "[MUTED]"; then
    wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
  fi
}

case $1 in
up)
    CURR_VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2*100}')
    is_muted # if the volume is muted, activate it
    wpctl set-volume -l 1.3 @DEFAULT_AUDIO_SINK@ 5%+
    send_notification
    pkill -RTMIN+9 waybar
    ;;
down)
    is_muted # if the volume is muted, activate it
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
    send_notification
    pkill -RTMIN+9 waybar
    ;;
mute)
    wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    if echo "$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk -F. '{print $2}')" | grep -q "[MUTED]"; then
      dunstify "Audio is Muted" -u normal -i "volume_mute" -t 1000 -r 6428
    else
      send_notification
    fi
    ;;
esac
