#!/bin/bash

iDIR="$HOME/.config/mako/icons"

send_notification() {
  VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2*100}')
  if [[ $VOLUME -ge 50 ]]; then
    notify-send "Volume: $VOLUME%" -h int:value:"$VOLUME" \
      -h string:x-canonical-private-synchronous:sys-notify -u low \
      -i "$iDIR/volume_up.svg" -t 2000
  elif [[ $VOLUME -lt 50 ]] && [[ $VOLUME -gt 0 ]]; then
    notify-send "Volume: $VOLUME%" -h int:value:"$VOLUME" \
      -h string:x-canonical-private-synchronous:sys-notify -u low \
      -i "$iDIR/volume_down.svg" -t 2000
  elif [[ $VOLUME -eq 0 ]]; then
    notify-send "Volume: $VOLUME%" -h int:value:"$VOLUME" \
      -h string:x-canonical-private-synchronous:sys-notify -u low \
      -i "$iDIR/volume_mute.svg" -t 2000
  fi
}

is_muted() {
  if echo "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" | grep -q "[MUTED]"; then
    wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
  fi
}

case $1 in
up)
  is_muted # if the volume is muted, activate it
  wpctl set-volume -l 1.3 @DEFAULT_AUDIO_SINK@ 5%+
  send_notification
  ;;
down)
  is_muted # if the volume is muted, activate it
  wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
  send_notification
  ;;
mute)
  wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
  if echo "$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk -F. '{print $2}')" | grep -q "[MUTED]"; then
    notify-send "Audio is Muted" -h string:x-canonical-private-synchronous:sys-notify \
      -u low -i "$iDIR/volume_mute.svg"
  else
    send_notification
  fi
  ;;
esac
